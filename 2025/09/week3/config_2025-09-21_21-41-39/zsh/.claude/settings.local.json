{
  "env": {
    "ZSH_SYSTEM_PREFERENCE": "siege_analytics_only",
    "CLAUDE_ZSH_CONTEXT": "Use ONLY Siege Analytics ZSH system at /Users/dheerajchand/.config/zsh/ - NEVER use atomantic dotfiles at ~/.dotfiles/",
    "ZSH_COMMIT_METHOD": "backup_system_only",
    "ATOMANTIC_FORBIDDEN": "NEVER edit or reference ~/.dotfiles/ or any atomantic files. Always use ~/.config/zsh/ Siege Analytics system.",
    "ZSHRC_IS_SYMLINK": "~/.zshrc is a symlink to ~/.config/zsh/zshrc - do not modify the symlink, edit the target file",
    "OH_MY_ZSH_PATH": "~/.config/zsh/oh-my-zsh (Siege Analytics controlled, not ~/.dotfiles/oh-my-zsh)",
    "DEBUGGING_DIRECTIVE": "ALWAYS investigate root causes systematically. Before fixing any issue: 1) Ask 'WHY is this happening?' not 'HOW do I fix this symptom?' 2) Trace the problem to its fundamental source 3) Fix the root cause, not symptoms 4) Verify the fix addresses the underlying issue. NEVER declare victory after fixing surface-level symptoms."
  },
  "permissions": {
    "allow": [
      "Bash(pkill:*)",
      "Bash(echo:*)",
      "Bash(pyenv which:*)",
      "Bash(pyenv:*)",
      "Bash(exec zsh)",
      "Bash(source:*)",
      "Bash(env:*)",
      "Bash(zsh:*)",
      "Bash(/bin/zsh)",
      "Bash(readlink:*)",
      "Bash(exec:*)",
      "Bash(/bin/zsh -n /Users/dheerajchand/.zshrc)",
      "Bash(/Users/dheerajchand/.config/zsh/zsh-system status)",
      "Bash(chmod:*)",
      "Bash(./test-phase-recovery.zsh:*)",
      "Bash(typeset:*)",
      "Bash(awk:*)",
      "Bash(git rm:*)",
      "Bash(find:*)",
      "Read(//Users/dheerajchand/**)",
      "Bash(timeout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(/bin/zsh -i)",
      "Bash(ls:*)",
      "Bash(~/.config/zsh/zsh-system status)",
      "Bash(load-python)",
      "Bash(python_status)",
      "Bash(ps:*)",
      "Bash(ZSH_CONFIG_DIR=\"$HOME/.config/zsh\")",
      "Bash(fake_parent=\"warp\")",
      "Bash(if [[ \"$fake_parent\" == \"claude\" ]])",
      "Bash([[ -n \"$CLAUDE_CODE_SESSION\" ]])",
      "Bash(then echo \"ü§ñ Claude Code - would load modules\")",
      "Bash(else echo \"üñ•Ô∏è  Regular terminal - would load modules\")",
      "Bash(fi)",
      "Bash(./zsh-system service status:*)",
      "Bash(./zsh-system service start:*)",
      "Bash(./zsh-system service stop path-optimizer)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(backup \"docs: update README to reflect completed Phase 1-3 architecture\")",
      "Bash(backup \"docs: update CLAUDE.md to reflect production-ready status\")",
      "Bash(zshreload:*)",
      "Bash(backup:*)",
      "Bash(alias backup)",
      "Bash(./test-production-system.zsh:*)",
      "Bash(enhanced_backup:*)",
      "Bash(export LOADED_MODULES=\"utils\")",
      "Bash(export LOADED_MODULES=\"utils python\")",
      "Bash([[ -n \"$LOADED_MODULES\" ]])"
    ],
    "deny": [],
    "ask": []
  },
  "defaultMode": "bypassPermissions"
}